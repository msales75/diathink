Next:
----

  Mouse loses drag-item when moving last child out of a parent
  (Are the old ones contracted or expanded when removed?)

  It appears to be retaining information from prior location.
    Inspect parentItem.after() command and/or force visibility and/or clone object?

  Change margins on empty ul-elements

  Make text editable, with special meaning to return, backspace, tab, space.
  Highlight available drop-locations
  Make leaf-handles into drop-targets for inside
  Make branch-handles into open/close-targets for hovering

  TEST on mobile!

  Double click focuses-to-top
  Add title-bar with breadcrumbs
  Drag to right
  Saving

  Hide some of the borders?

  ? Should we continue to require contentBinding for lists?
  Coming up:
    Search
    Horizontal swipe
    Inbox, Favorites
    References

    Make lists/selections selectable
    Performance
    Actions, Undo

Issues/todo:

  DONE: ul's are not hidden after having the last li-item moved out.
  DONE: Change cursor outside of handle (remove button-class?)
  DONE: Add handle on left to drag
  DONE: - add an element inside the list-item-view
  DONE: move handle into tolerance-element div
  DONE: Add expand/collapse buttons
 DONE: Diagnose weird drag-targeting behavior (may also be tied to jquery-mobile theme)
 DONE:   It seems possible to drag li directly inside of li without a ul above it.
DONE  Restyle list after moving
DONE    Find right spot(s) to call ListView.themeUpdate()
DONE    Also call it for the source-location
DONE: Override jquery-mobile listview widget?
DONE:  Hide open-button on right
DONE: Expand sublist CSS to fill right

  DONE Adjust code to permit multi-layered toleranceElement
DONE Get ListView and ListItemView working nested.
DONE Need to define controller for ListView inside ListItemView at correct time
  DONE Only call renderUpdate for sublists when rendering list-item templates.
  DONE Search deeper than one level for sublists - like clone.
  DONE How are event-handlers getting propogated to nested lists - (they're
not)
  DONE Is event-handler propogating to children; why is pageshow getting propogated inward?
  DONE A single controller must identify what is selected among list-outlines.
   Examine pattern of controller-calls when event is fired.
    - set breakpoint inside event-call function (generally useful for debugging)
    ui.js 

Later:
  Need content-binding & event-delegation to work for nested view/controller/model elements with the same setup-parameters, going to the corresponding model sub-object based on the view nesting.
 -- start with one single content-binding for list/outline
    then add support for binding sub-models inside the list/outline model?
    This is ok when content-changes start from DOM (we know what part to update)
    Harder when change comes from external-database via model content-binding 
      -- probably not needed for one-user text & sort



list.js renderListItemView and cloneObject may need to be changed.
Non-lists would be rendered right here: that.addItem(obj.render());
Call renderUpdate() afterward to render list items?
  But renderUpdate doesn't propogate to lists inside the list-item.
  Make sure renderUpdate propogates - this may affect multiple widgets.

Later: handle updating bound-list content

* Get nestedSortable working on top of ListItems
* Trigger ListView update to/from nestedSortable moves, in up to two lists.

Outline Drag with handle
Notice-message-slider at top
Text edit
Expand/Collapse
Focus button
Multi-page display/swipe
Search-slider
Vertical scrolling
Adjacent & Inbox drag-targets
Search-drag/page
Reference node display
Reference page display
Reference page focus
Toggle drag-to-move vs. reference
Cleanup outline-targets

Home/inbox/preferences?
Undo/Redo
Localstorage

Backend:
---------
Action-log
Search
Autocomplete
Contextual search
Share/Sync
Import/export
  Gmail, Google-docs, Chrome-extension, Evernote
Allocate disk space

Flag for move-original-node on drag/drop?
Preview on click; edit-name/tags on double-click

How does tag-selection UI work?
  Triggers & Inheritance-rules?

Tags can permit/open-up others, or bring to top list?
Different than references, because they are common/numerous?
Text or Nodes?

Are tags text or nodes in a list?
  (probably nodes)
Do some tags permit open-up others?
Tag-management is progammatic?

Later:    
-------------
Long partial lists
Smart-background-loading (start with empty hooks)
Smart-queueing
OS attachment drag/drop
Image cropping/tuning
Indexing & OCR (Html, MS Word, PDF, Google-docs, Image-OCR)

Status, Schedule, Delegation (dependency as subtask?)
Statuses could just be reference-lists with a special UI? 
 (unfiled/someday/later/soon/now/issue/wait-for/wait-until/completed/scheduled-event)

* Node title/shortname automatic before colon (used for paths and abbreviations)

Is ownership a tag?

UI for 
  * making a new tag 
  * making an existing node into a tag 
  * adding/removing tags to nodes 
  * adding/removing filters 
  * editing tag-triggers & constraints
   - trigger from tag-change
   - trigger from delegation
   - trigger from 
  * Adding css-styles based on tags (color; completed)

Distinct from predicated references (0 vs. 1 argument)


- Tags should be nodes, but might have syntax-constraint on content.
  (might also impose uniqueness constraint on tag-text)
  
- Save Search-results vs. Save Search-filter
- Put node-references into 'tags' lists
- Triggers built into tags or items
** Special ui for selecting tags
** UI for defining tag-triggers
- Select sane defaults; let advanced users override
  resolved; today/inbox; switch-on-date; switch-on-reply; switch-on-completion
  today, inbox;  later, completed
* Distinguish Revisit-someday vs. Archived-for-search-only

comment-flow:
issue-flow:
task-flow:
delegation-flow:
due-date-flow:
appointment-flow:
subtask-flow:

- Reference-parents can be shown as a quick-tag; UI for changing quick-tags
- Change-tags-on-date  (common notification-profiles)
- Change-tags-on-dependency (tag-change)
- Change tags on reply from user (edit or reference-change)
- Should be easy to add/remove tags, and to change them and save and/or filters for them, and to support date/trigger logic 

 - optional verb for references for fancier predicates (permits database/spreadsheets)

 - Filter for tags? (#today #soon #later #issue #someday) and (@mark @john)
   type? comment/issue/reference
   bug,issue,feature,story

   (Same-list is 'or', different lists are 'and')
 - How to save searches; setup homepage?
 - Browse by calendar (outline ok)

    - ? Tag-filters for node-types? Not everything's a task?
 - multiple-parent search is fine

 used-for-x and contains-part-y (advanced search; multiple parents)


Special outline of tags: #status @person


Profile & friends


Comment-view: very different UI
  shows children and reference-chains as conversation-threads?
Optional-verb for references?
Browse reverse-references as parents?
Notices?
Friends?

Spreadsheet interface (from tagged properties)
2D-UI design (from outline structure?)

