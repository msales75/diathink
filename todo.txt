
Sequence of newLinePlace regarding outline-ID's
 (why are you calling newLinePlace for changeRoot?)

1. Get context & neighborhood
   before doing placeholders
rOldLinePlaceholder created in oldLinePlace
 - activeLineElem defined and detached
rNewLinePlaceholder created in newLinePlace
dockElem set in options or cloned from activeLineView

Encapsulate animation, placeholder & docking operations


restoreViewContext:
  activeLineView
  neighbor based on activeLineView or rOldLinePlaceholder

  oldParent
  newParentView/oldParentView

  activeLineElem
  activeLineView


Question: when/how are elements reused
  for placeholders and/or docking?
ChangeRoot creates a new view-id
  but preserves old one?

* Finish debugging, then move animation-stuff
    into separate files.
* Move actions into separate files.

* Endure unused options for now.


Make a separate place for animation?
 general, placeholders, docking, scrolling

Should we setup animations in a separate
  layer of queueing?

Animation types:
 Move line/line or line/panel or link/line
 Some update master-outline, edit links
 Some update panels, leftPanel, expand/collapse
 Some update focus/scrolling, change leftPanel

Subpanel linkage & anchoring

Viewport when action happened: panels,
  leftPanel, expand/collapse
Actions and undo/redo should update focus

Create/show/hide/delete placeholders
  - adjust outline height offset
Create/reuse/Move/delete dock element
 (if o.dockElem is set)
Set leftPanel
Set panel-scroll to focus

Do we create, clone or re-use
 animated-element?


context:
 oldModelContext, newModelContext,
 oldPanelContext, newModelContext
 runinit-vars

createDockElem (context):
 createDockElem
dockAnim (newLinePlace, oldLinePlace)
panelPrep
oldLinePlace
newLinePlace
linePlaceAnim
anim

'View'->'finalizeView' should not require anim

execModel:modelCreate (overriden)
 restoreContext:
  oldModelCollection,
  oldModelRemove, newModelRank, newModelAdd,
execView: (overriden)
 restoreViewContext: view
focus
undobuttons
end



actionAfterInsert is too long - need to break it up.


animStep
dockAnim
linePlaceAnim called after oldLinePlace and newLinePlace,
  after preDock and context
 ** if using linePlaceHOlderANim
runinit
animStep always comes after linePlaceAnim, if it exists
 But linePlaceAnim doesn't exist here?
 So how does view get defined?


todo: fix explicit loops over panels

context
  getOld/NewPanelContext
    defines this.oldPanelContext

oldPlace/newPlace/placeAnim (don't use for panels)
  (move into separate functions)
preDock (needs activeView and no-helper)
dockAnim (sets animOptions)
  (needs newPlaceholder & helper)
  (needs modification for docking to panel)
anim




// (NO) don't do any model-ops in a panel-changing op. (does this work?)
//     --> dragging panel/breadcrumb into a line as a link

// Flag data for cleanup

UI Development:
 Variable scopes/types
 Data-Examples/Constraints
 Essential/Inferred examples/constraints
 Benchmarks (flagging exceptional cases)
 Focus on code-constraints/tests (ability to inject them)
 User-feedback
Backtracing in UI (identify characteristics of image)


Most efficient way to handle animation-docking?
DOM Replacement, hmm... make smaller mods & update element-refs?


Next:
---------
OK Update breadcrumbs if view moved to new parent (or undone)
OK Handle text-buffer overflow if typing in undefined-space while performing actions
OK diathink.helper could be reset when dragging while another actions animates
OK Fix flicker/jiggle of lower items during indent/outdent or drag
     -- combine two height animations into one.
OK Sharp-corner when indenting last line
OK Sharp corner when moving to top line
OK Fix uneven background-color when exchanging dock
OK Redraw when typing first letter into blank field
OK Indent/outdent causes jiggle underneath
OK Pixel-rounding issue.  Should get all heights normalized to integer pixels.
OK Double-space issue with fixHeight.
OK Drag-helper needs to appear earlier when indenting
OK Drag-helper needs to preserve appearance for sub-outlines
OK Helper can't disappear until after activeElement replaces newPlaceholder.
OK Drop-Line-widths shouldn't be shorter for multi-line text
OK For dragging, the checkTextChange should act on mousedown
OK Text-changes aren't saved before double-click or collapse/expand
OK Focus on previous line after backspace-deleting

 * Add animation for change-root
 * Add font-change button (and update textarea heights)
 * ? Expand/contract animation


*** UI Enhancements: ***
 * Improve Scrolling (hard)
   - enable scrollbars/disable-drag for mouse
   - enable scroll-wheel
   - avoid scrolling when all is visible, (decrease/eliminate buffer-size and adjust for window-resize)
   - avoid scrolling unintentionally when dragging
   - smarter scroll-speeds when drag-scrolling
   - undo/redo scrolling
   - auto-adjust on resize
   - how to return to focused element like google maps (replace redo button)


 * Handle deleted views (wait for multi-panels)
 * Add plus and drag/drop-line for blank views
 * Drag-to-vertical-line (hard)
  - Add design-space for vertical line
  - Keep track of panels like items in nestedSortable
     (views do this)
  - Determine its coordinates relative to panels
  - Add line into drawDropLines & updateDropBoxes
  - Add action or non-action event?
 * Horizontal swipe
 * Make panel-title editable (though double-click inboxes)
 * NOTE: If an outline is deleted, undo re-creates it with the same rootID,
 * NOTE: ViewManager must reserve view-ID when deleting root view.

 * Re-enable open-while-hovering without messing up drop?
 * Improve Handle graphics
  - handle: black Circle with grey gridlines with optional black-triangle inside (right/down)
       Vary transparency from very faint to black
 * Improve drop-icon graphics
 * Improve Undo/redo animations - show for all visible panels?
   - Show transitions between same panels if visible?
   - Make up a start/end-location if none exists?

 * Add line-split and line-merge for return/backspace
 * Trash (footer when dragging?)

*** Save locally, remotely

 * Up and down arrows should change lines
 * Add shift-tab keyboard-command
 * Make newline/delete jump in/out when expanded
 * Make newline/delete split/merge text

*** Performance: **
* Mobile-UI: Remove double-click effect on disclose-tap
Wait on: Focus and replaceChild
 Try blur/focus-preventDefault to avoid keyboard-delay
Focus is hopefully improved by smarter keyboard management with phonegap.
  - replaceChild seems capped in slowness?
 Feasibility of quickly adding/removing list-items for long-scroll?
 Use expansion/contraction as test for replaceChild benchmarking

Setup an asynchronous garbage collector for removing slow things
Save element-reference in views once they are rendered
Modify rendering/theming/destroying to use use cached-elements and work detached
Clean up the list-item recursive-rendering so there is a single subroutine
  with single DOM rendering and no redundant theming
 model-parentCollection/rank needs optimization

*** Phonegap: ***
* Setup on Mac
* Test keyboard open/close & scrolling
* Test Keyboard-strokes after focus for autoscroll
* Test panel-scrolling

* Handle if a conflicting action is scheduled
    before prior action finishes - (context is changed?)

** Validations **
How to test obscure parts of delayed keyboard-code?
On text focus:  Hide cursor and background-change, verify not scrolling
* validate classes used for bindings like .disclose are only used in designated view.
* Test Deletion issue: are we dirtying jQuery's cache?
    delete item, re-create one with same ID, examine selection.
 validate that scroll-spacer has height
 validate that panel extends to bottom of page
   ui-scrollview-clip 305px?
 Validate all M.ScrollViews are in content-place
 Validate that all elements in page fit inside the page/screen
 Validate that scrollview and textarea heights are up to date,
    and that spacers are present.
 Show an exception or alert or something when exceptions are thrown loading application in index.html
 Check if ui-focus classes are being added elsewhere in jquery-mobile?
* Verify arrows always highlight when dragging (overlapping, ambiguous or empty insideBox?)
OK Add in check that disallows two actions running concurrently
   (like with blur event)
* Why is action-model not showing up in relational-model list
* Why is Firefox losing hover-state on fast mouseovers?
* Do we need autocorrect/complete attributes?
* Make sure inherited variables are not mixed between object-classes (e.g. in Views)


---------
Link UI:
 * When dragging, add drop-box at lower-right of each text-box
 * Hovering over dropbox highlights line and previews hyperlink-text at end of text
 * Dropping into text-box adds hyperlink to end of text, creating a new line if necessary
 * Design appearance of hypertext with dotted border
 * Where to draw a superimposed-word/symbol can be calculated from a div/span.
 * Dropping opens the link's edit-box (temporary-panel to right if children?)
 * Single-click re-opens temporary-panel to right
 * Edit-box shows breadcrumbs, allows renaming, deletion
 * Edit-box has move-left/move-right if there are multiple links in same line
 * Edit-box has move-up/down if there are multiple lines with links
 * Edit-box shows expandable children?
 * Link is draggable and double-clickable
 * Breadcrumbs look/click/drag like links
 * Double-click opens new page
 * Dropping onto vertical line opens new page
 * Dropping into right-slot adds reference into line
 * How to rearrange multiple links?


------
Docked links:
  * Dropping between lines adds a docked-link
  * Design indicator for docked-link vs. regular line
  * Dragging Handle acts like a regular link
  * Single-click expands link's children in a nested outline
  * Docked-link in model internally same as a text-link with empty content
  * What about double-clicking handle -->
      preview in "temporary" page to right, like regular link

------
Inbox
  Icon on top row
  Double-click panel-title to add
  Drop anything to add (dock-point)
  Tap inbox once to preview latest 3
  Drag or double-click to open

---------
Search UI:

Search-results are auto-updated
Search-list is draggable like a link
Search-items are draggable like links


  Drag from searches into regular
Suggestions based on visible content

Search returns a list of expandable links,
 Search results aren't editable, no textareas
 Only has docked-links, not inline.

Backlinks:
  Line backlinks
  Panel backlinks

* Backlinks button with count/new-icon, opens custom-search
    flags/tabs for: unincluded, unread; tabs for comments,references?)
* Use different icon if some backlinks are visible on screen,
  first click highlights them, second link opens full-search.
* Also different icon if they are unread?
  Can drag to inbox on viewing?

Saved Searches can be added as links to any line- do you really need more?

Search-button on each used for back-references and similar-pages

---------
Concurrent Usage
Login Accounts (Facebook? Google? Twitter?)
See user-activity (just typed, been a while)
 (just for those in conversation)
See user-status online (can check facebook)
Share-page/conversation-on-facebook

How do you organize discussions:
  * real-time discussions
  * asynchronous additions
    (mark replies-to-comment coming from outside discussion?)


--------

Likes & Concerns in threads
 (User-expertise?)
Cross-out
Notification trigger
Templates & visual design

Resolve/cross-out (trash?)
Trigger on date/resolve

Database-Views: saved searches

* Special handling of text-indexed-files? (TEXT, HTML/EMAIL, PDF, DOC, OCR)
   (Select rectangle or text)
* Search mixes outline with files
* Drag to migrate to line with source-reference
* Button to split long text-nodes in-program

 * Notices/Offline
 * Drop onto breadcrumbs
 * Improve Breadcrumbs: ellipses and horizontal scroll
 * Inbox Drop/open
 * Find real-estate for inbox (settings, search, notices)
 * Add docking-preview animation for long hovers
 * Expand/contract preview for hover
 * Logo
   Diamond-text: http://images2.layoutsparks.com/1/76256/white-logo-black-design.gif
   Cute dog: http://www.aaanything.net/wp-content/gallery/super-cute-animals/cute_puppy_in_black_and_white.jpg
 * Printing
 * Undo double-click for history
 * Zoom double-click for size & panel-options
 * Add iPhone/Safari detection to request homepage install

Future Link UI:
 * Designated links can select options/checkbox
 * Constraints & Templates
 * Clicking on a comment in conversation-page (to link to it)


** Refactoring **
*? in actions, replace outline.rootID with single-var
* nestedSortable "items" point to Views
* cache height/width/offsets in view-object
*  update cache during resize or redraws
* Catalog & prune jquery-mobile events
   (vmouse/generated-events, focusin/out, page/history-handling, startup-tags/css)
* Write substitutes to jQuery selectors, add/remove-class, etc.
* Remove events & content-binding from M-project libraries
* Ensure class-theming happens before DOM-insertion
* Central event-handler for bubbled events (or focus-events?)
* Use only target class and id for routing
* Simplify classes-structure for styling
* Put many subroutines in global diathink space.
* Syntax cleanup for all colored-boxes etc.
Rendering uses classes and




Override selection-default when dragging across lines
Multi-line selection/dragging

* Deal with image-load/error bindings which we removed.

3 List-types: Editable vs. Search-results vs. Conversations




 Soft Keyboard assumptions (needs interactive validation for devices)
  Scroll-position on window-click event keeps keyboard in same position
  Suppressing focus/blur keeps keyboard in same position
  Focus/blur on input causes keyboard to appear or disappear
  Suppressing mousedown suppresses focus and blur
  If mobile, suppressing mousedown does not suppress tap, vmousedown or vclick
  Click is called after focus or blur for keyboard-height
  If IOS, the weird hack detects keyboard height
  If not IOS, resize is called with new dimensions when keyboard changes

LATER: Separate buttons outside keyboard:
  up/down/left/right/
  indent/outdent/new-line/new-child/
  delete/split/merge-up


Settings:
  Undo/redo
  Don't move original
  (Optional/later) Zoom to touch -- and zoom-out with zoom-box when dragging
  Search
  More in menu:
    +/- Font-size (for this device/orientation)
    +/- Zoomed Font-size (for this device/orientation)
    +/- Panels (for this device/orientation)
    Offline-flag
    Handles on Left/right
    Text/background-style/colors
  Inbox
  Trash
  ? Favorites
OS dependent:
  Spellcheck
  Autocomplete/autocorrect
  Magnifying-glass for cursor
  Text-selection
  Double-tap for word-selection
  Text Copy/Cut/Paste

Photo, Camera
Attachment


Supplement keyboard with:
 Bold, Italic, Superscript, Subscript, Link, Undo/redo

Track jQuery event-firings &
  Monitor state-parameters-changes after each firing
  function, element, nested-triggering-event, default-firing

Link-previews should include breadcrumbs.

LATER: Add link to side outside text?
LATER: Add markup-text for bold/italics
LATER: Add WYSIWYG editor for non-touch devices

Validation checks scroll height, position & visibility

* Move event-handling up to page-level
   (even nested-sortable mouse.js)

Trigger adds/removes based on links
Text-syntax for hidden links
  Checkbox?

Top-level directory:
 Inbox
 Notes
 Conversations
 Archived
Later:
 Tasks (Todo/Doing/Done)
 Contacts
 Calendar
 ?Activity/History

Notifications
Version-management


(event.type != 'mouseover')&&(event.type!='vmouseover')&&(event.type!='mouseout')&&(event.type!='vmouseout')&&(event.type!='resize')&&(event.type!='throttledresize')&&(event.type!='mousemove')&&(event.type!='vmousemove')&&(event.type!='mousedown')&&(event.type!='vmousedown')

* Todo later: move scroll-binding up to page-level and delegate events manually

 Local Search (store word-pointers in 512M RAM?)
 Local Saving
 References:
   How to access reverse-references
     Two-panel references
   Dragging can:
     Creates reference to original (normal across panes)
     Moves original (normal within panes)
   Click can:
     Preview contracted-children to right
     Edit text, when there are no children, or expanded

'Following' should be a measure of usage/relevance
Editable documents can follow other versions
Clone, Propose, Accept

Backlink-click shows sort by relevance or date,
  button shows '4 unread'
Uneditable search-results can be dragged into a list,
 as can a feed?
  Editable-list
  List-feed/conversation
  Search-results

   switching original with reference
   conversation-area with reply-references
* Shared/collaborative online editing
* References & annotations


* Index history by User/Time/Parent-list of affected nodes
* Write a functional test for a sequence of actions that test all action code branches
* ?nestedsortable test?
* Multi-line-selections

Login via Facebook
  - access name & email
Page has Share button
   Start a new conversation
   Add to existing conversation
     - then triggers conversation invite button
Conversation has "Invite" button,
     Send invitation to facebook or clipboard
Must login to comment
Conversation shows who is active/participating
Conversation-page has links to content-pages.
Content-pages have links to conversations.

Lines just need 'linked-by' button,
Page-search needs Related/Excluded

"New/Unread" notification: online and offline
 Online goes to inbox? Notices?


? Later? Add in check that disallows a tap leading to another tap?
Import/export on phone/tablet?
  URL, GDrive, Image, Contact, Email
Drag/drop import/export on Desktop


Code editing needs:
  Multi-line selection/dragging
  Large-scalable with search
  Adjust fontsize
  Syntax coloring
  Indent recognition
  Link-to-external-builder, vcs & jslint

  Harder: interactive jslint
  Proposed commits

Comments/Annotations would rock;
    link to declarations, related uses, places its changed

Prioritizing?

* Facebook/Google login
* Collaborative editing
* Share page with selected friends or post for all
* Browse shared-pages / activity
* Notifications
* Chatroom with quotes, references,
    thread-highlighting, drag/drop

* Promote-to-task/tasklist
* structured field:value's
  (for automating constraints & updates)
* Inline #tags (maybe)

Reverse-references/annotations
Dual-pane reverse-reference view
  children mixed with reverse-references?
Button to turn line into template (select type, optional guess)
 (Or each list item?)
Actions for creating/editing/deleting records via drag/drop?
Line->Template drag/drop import
Recursive view for fields, filters & sorts
Line-condensing for tables
Recursive views have constrained editing
Search shows objects/counts separately ("and 17 other cases")
Google-search categorizes pages about this object

 Record profiling logs (support replay?)
 Local/Remote Search (5-25 search-terms per line?)

* Local/Remote Save
* References
* Tags & Triggers
* Real-time collaboration
* History merging with issue-recording
* UI for browsing merge-issues


* Partial view-display
* Partial local-loading
* Action-Queue prioritization
* Partial loading
* Clone, Sync, Remaster buttons

web-toolbar plugin for clipping/importing/annotating web content
 (might be better than gmail/drive separately?)
For thought: references vs. annotation
For thought: inverse-references vs. tags
  Current idea: triggers/constraints can bind them when needed
    (but what about tag hierarchies; making drag/drop implication constraints?)
OR special kinds of lines are tag-hierarchies?
? Use Status parameters for model and view updates
View/edit auto-outline organized by tag1, tag2, tag3?
Mutually exclusive tags

Annotation?
Hide-able text-tags
Hide-able field-value properties
Constraints/Templates/Triggers
Chat and Facebook integration
  - attached url's, gmail, google-drive/docs
  Open/resolved-issues, points (and ranking within issue)
    Example; generalization/idea; Ambiguity, Clarification


*** Streamline unneeded event-bindings/widgets:
page (keep for now):
  adds remove() handler (probably unneeded)
     adds beforehide -> removeContainerBackground
	 adds pagebeforeshow -> _handlePageBeforeShow
  adds tabindex=0
  adds ui-page ui-body-c
Scrollview (keep this for now):
  addClass ui-scrollview-clip,
  wrap children in div.ui-scrollview-view
  hide overflow
  don't allow position:static for self or view
  set view to left:0/top:0
  setup timer/momentum-stuff (probably all we need)
Does need .remove?
 (bind at root?)
  .ui-header
   scrollview-clip.remove
breadcrumb tap
scrollview mousedown

OK Fix bug with unfinished expand/contract during changeRoot
OK Fixed bug where oldParent needed to check for view-existence
OK validateOptions won't work when undoing a drag into a collapsed place
OK preDock won't work when undoing a drag into a collapsed place
OK Triple-click sets root twice
OK Breadcrumbs get lost on changeRoot
OK Branch class added somewhere without removing leaf class.
OK Don't delete item with children via backspace
OK prevent backspace-back for uncaught keystroke
OK Make target-options & contingency-test asynchronous for text-commands
VOID Disable undo/redo buttons when waiting for non-undo/redo actions to finish
OK Each outline has to remember collapsed/expanded nodes
OK Outlines must be preserved/restored when deleted/undone
OK Collapsed objects inside other collapsed objects lost
OK    when outer-collapse (or root) is undone.
OK - Each action and/or outline has to remember collapsed/expanded exceptions
OK - update controller with each collapse
OK - renderUpdate must be able to use view-specific model

OK Ensure you can't getting stuck in transition-mode or drop-mode.
OK Ensure rapid actions can't interfere with each other.
OK Look for bugs
OK Fix validation-constraints for new list-contraction
OK Check child list-contraction in renderUpdate recursion
OK Update model collapsed=false when last child is removed
OK Stuck in transition-mode after cancelling drag
OK Error dragging into collapsed items.
OK Possible to get stuck in transition-mode when dragging collapsed-items
OK Undo/redo doesn't handle collapse?
OK Need to change branch to leaf when last child is removed, and ensure collapsed=false
OK Need to add subaction for collapse-change on remove-all
OK rename variables more consistently
OK Keep object-edits from inadvertently changing class-scope
OK Distinguish properties per-object and per-exec
OK When adding a child, need to go from leaf to branch.
OK Test context assumptions, especially for undo/redo
OK Validate there are no non-empty action-queues in history.
OK Validate there are no scheduled-actions waiting in main-queue.
OK Test for valid options at start of function, based on type.
OK Test existence/properties of active/reference
OK Test view-assumptions for undo/redo?
OK Add constraints for dragView, focusView and diathink.helper?
OK Need to bundle undos/redos for subactions
OK  (Note: redo doesn't update lastAction)
OK Eliminate 'undefined' in text (value is not getting initialized)
OK  - removed option-initialization from init()
OK Fix Animations
OK Handle dragging multiple items to/from an invisible place in one view

OK Add/remove View & DOM elements for contraction
OK* Changes in width due to new-location-indenting
  - are not noticed by fixHeight
OK Clean up drag-helper appearance/classes?
OK Support multi-line text per draggable-line
OK Keep drag-icon for dragged element

OK Fix undo/redo for text-editing
OK Add view-expansion to model
OK Retain list-contraction in model

OK Migrate events to page-level:
OK Breadcrumb-tap
OK Collapse/expand-toggle
OK Text-input focus/blur/keydown
OK UL mobile-events probably undesired
OK IMG events groupable for shared file (or eliminate)
VOID Connect drop-line-hover with parent-drop-into icon & border
VOID Connect drop-into-icon-hover with staggered line into target-location
OK Remove alerts from keyboard
OK Do we need scroll-checker every 200ms?

OK Fix autogrow called when needed
OK Don't call fixHeight when content is empty.
OK Ensure we call fixheight on keyup change input paste
OK Ensure we call resize after window.load
OK Fix validations for new list-item html
OK Reduce console.logs.
?OK Fix scrolling while dragging
OK Adjust icon position for green arrow
OK Fixup dotted-line appearance
OK Does ui-focus match focus - class for hide-selection.
OK Text-cursor remains separately focused from mouse-dragging
OK Drag-icon should also add ui-focus to list-item and changed focused elem
OK When dragging, add hover-class for the target list-parent
OK Lists have data: 'list2view', inset: true
OK LI have nestedSortableItem: object
OK all data and bindings removed from inside panels
OK Helper needs to stick around for docking
OK When is helper destroyed?
OK Optimize remove and replaceWith
OK Don't use animate() - make a recursive function
OK Remove lastclicked from data in .disclose
OK drawLines (make async addressable)
OK Improve transitions for indent/outdent
OK Don't show draglines
OK Round-edges
OK Go faster
OK Clip right if sliding right
OK Hide target-underneath until done
OK currentItem should have solid background when hidden
OK Add appropriate corners to transition-items
OK speedup transitions for newline
OK Improve transitions for delete
OK Add docking animation for drop or revert
OK Add transition animation for return/backspace
OK Fix undo/redo
OK Fix undo/redo for insert/delete
OK Show basic docking for undo/redo

OK Drag Pickup and dropdown-action are slow on iphone
OK Safari freezes after pressing Return
OK Return does not always make a new line (e.g. after a space)
OK Backspace must be hit twice to delete line.

OK Opening new content does not have correct number of textarea lines
OK Do a preliminary benchmark of iPhone/iPad performance

OK Eliminate list2view
OK   Add classes manually
OK   Remove buttonMarkup
OK   Manage corners more optimally
OK Eliminate text2input
OK   Add classes manually
OK   Migrate focus/blur/keyup handlers
OK   Eliminate all list event-binding
OK   Improve autogrow

OK Dropping into item produces 'special case'
OK Disallow dropping into own parent (it sets prev=self)
OK After focus, page-height looks wrong (until resize?)
OK After focus, items are not droppable
OK Make overflow hidden for page and scrollview
OK Add validation for scrollTop() is 0 for body, page, panels.
OK When scrolling to bottom, whole page scrolls
OK Remove extraneous text-selections made with the mouse
OK Disable scrollTop scrolling on the panels (how is this happening?)
  (workaround by manually resetting scrollTop)
OK Add empty-block under list that's 80% screen-height (when scrollable)
? OK It's possible to select/drag a browser-link to localhost
OK Make log scrollable on iphone
OK When dialog opens for softkeyboardopen,
  the parent panel has scrollability frozen
OK Second keyboard open does not trigger keyboard-dialog
   - iPhone doesn't fix scrolling on keyboard open?
OK Scroll-bars are not full page-height after focusing.
OK In iPhone landscape mode, bottom is clipped
OK iPhone closes keyboards after return/backspace
  -- triggering focus() won't open keyboard from keydown event
  (Require homepage docking)
VOID Why is validation is giving errors on overflow and z-index
VOID incorporate drag-hover into the validation

OK Add CSS to style these spans the same as inputs
OK Change :focus CSS to use .ui-focus instead
OK but missing blue border from input:focus?
OK Add/remove ui-focus classes based on active-span
OK Use darker background outside panels
OK  Tweak borders how you want:
OK  too many gradients? milder colors?
OK  Use round(offset()) instead of offset() for textarea
OK Update textarea position & dimensions on resize
OK Textarea needs to shrink when moving from short line to long
OK Re-enable keyboard commands from text-area
OK Need to use multiple textareas
OK Hide textarea on line-drag
OK Fix keyboard-auto-scroll (again)

OK Eliminate hiddeninput & cleanup
OK Fix open-keyboard-twice issue by tracking open/close status
OK Update model-content from textarea change
OK Textarea is too wide, margin on left distorts 100% width
OK Let textarea drop to second line for long input
OK Shrink textarea when line shortens
OK Textarea-height needs to propogate on renderUpdate.

OK Add hidden-input positioned in header, outside scrollbars
OK Add keyboard initialization into main.js
OK Give keyboard object to nestedSortable
OK Define keyboard-open/close methods in nestedSortable
OK Tap over span triggers keyboard-focus-event & updates active-span

OK Change inputs to spans
OK Add view for span-text -
OK    remove unnecessary styles from it?
OK Tap scrolls text-span to visible position
OK Close keyboard by blurring hidden input
OK Move a textarea on top of the span
OK  and utilize default text-editor

OK Fix height of textarea - examine jquery-mobile
OK Use jquery-mobile to grow text-editor size automatically
OK Add active-variable to track active span
OK Synchronize text below too
OK Move textarea with scrolling, if it's in the same panel

VOID Define cursor object with position in active-span
VOID Draw cursor-line manually, based on active-span and position
VOID In text-mode, left/right arrows or tap can move cursor
VOID Override keydowns to write/backspace to active-span
VOID When in text-mode, tap moves cursor
VOID Allow selection within a span?

OK Enable drag-scrolling at top and bottom of screen
OK  - use same scroll-system or different one?
OK   Use a variation of sortable's built-in one?

OK Move nestedSortable to page-level,
    to maintain one copy of the items, and to stop using containers.
OK ERROR: can move underneath items that have visible children,
  and can move to immediately lower/higher state (too many green lines)

OK Keep dragLayer in outer layer for dragging across panels
OK Move dropLayer to each panel for scrolling

OK Get cross-dropping/containers working in nestedsortable
OK Need to replace drag-helper with something outside scrollview.
OK This should avoid the need for drag-hover too

OK Add a container around scroll-areas with some padding
   (to allow 50% width calculation)
OK Try two-column grid for defining view-area
OK Fix bug with header
OK Fix height of scroll-area based on need
OK Encapsulated outline-creation, ready for focus
OK Focus replaces current scroll-area instead of page

OK Fix order of undo (blur) for text-edits
OK Disable hovers
OK Disable drag-scrolling when dragging
OK Change cursor to hand for dragging
OK Double-click input-box for text-input
OK Why is ui-focus is sticking when text is entered
OK Edit event getting fired at blur/change, in middle of create-event.
OK Disable scroll temporarily on input-focused area
OK Unbind when clicked on the wrong part?

OK Need to monitor jQuery events, handlers, and bubbling
OK Why is scroll is conflicting with tap?
OK Add a second pane / dual-pages with same outline
OK Add Home link to Breadcrumbs
OK Make Breadcrumb link-clicks work
OK Enable pointer over breadcrumb links
OK why isn't there a unique initialization event for page-rendering?
OK  Work-around with pageshow.
OK Getting too many pageshow / disclose events
OK How to get tap to propogate to parents?

OK Focus on double-click
OK Get undo (restoreViewContext) working for all permutations of movements.
OK: handle out-of-scope view-updates,
OK when source and/or destination is outside outline,
OK or context-parent is outside outline.
OK Fix views being deleted from viewList

OK Finish Raw History management
OK Support undo for all changes

OK Hide handle images when in drop-mode
OK Drag-hover over handle for expand/reduce
OK Cleanup theme changes for list-finalization
OK Test outline-validator
OK Add validation for z-index, overflow-handling & corners, expanded-classes
OK Fixup z-index/overflow handling
OK Basic test on Firefox/IE
OK Cleanup redundant code in action-list
OK Fix 'input' selector for focusing in actions
OK Why is the outline not showing up without error-messages?
OK Finish adding/testing item-selectors for old parent/rank with move actions
OK Fix overflow/z-index manual adjustments for dragging
OK Draw border around dragged target
OK Fix ui-focus-parent class-removal
OK Make all elements available for drop-into

OK Enable drop-into box
OK Make helper translucent; z-index confusion
OK Add icon for drop-into box
OK Migrate css to stylesheet-classes (.dropborder, .droparrow)
OK Re-enable .drop-mode

OK: move some of nestedsortable inside for fine-grained
    action-queueing (UI-transitions and mouse-moves)
OK Watch DOM modifications done by mousedrag
OK Move most modifications into mouseup via 'stop'

OK Override jquery-mobile CSS to make it passable with and without helpers
OK   Find classes responsible for borders
OK   Hide borders when unselected
OK   Reduce line-height
OK   Position boxes above/below


DONE Include the outline-master-parent in the view-list for each model-node?
DONE   and a list of views to update?
DONE  Also need to have controllers linked with view-rootID
DONE Immediate goal: modify view to add/remove/indent lines
DONE   get changes working when calling model-object for changes.
   (can increase localstorage to 50M hmm...)
   (images/attachments are the problem)

For my brainstorming:
 Text from:
  Gmail
  Web snippets (URL+selection)
  Clipboard text
  LATER: PDFs
Embed images & GDrive

Item search shows inbound links, optionally hiding those that are referenced
Citations and comments are inbound links; are they different than others?
(Freeze after posting in chatroom?)
Links go to other chats and/or to objects

Nodes :: Conversations
Conversations are special kinds of nodes, attached to regular nodes via a link.
Focused-page has options:
  Invite for a new conversation
    Add to an existing conversation
Conversations have a link that can be shared via Facebook or Email,
  associated with one or more page-nodes.
Each line is like a regular line, without some options.
Start with Facebook login only
Ask for post permissions when inviting or sending to facebook users.

Conversations
Chat-panel has a draggable link on the page-line.
Allow anonymous reading via link, require Facebook login for editing.


Socialization is important, if only for comments
 ("quoting" things, or other comments)

Select/drag/drop website text snippets, with url
PDF's would be nice (just select text?)
Image Snapshot?

DONE Enable text-commands for new lines etc.

 Later enable ReferenceList to work as a list of references
 Later: UI helpers vs. actions (optimization/refactoring issue)
 Modify model too

 Tags have a trigger-object with methods triggered by:
   outlineObject.addTrigger({
     sequence: negative to test, positive to finalize
     'tag-added', 'tag-removed', 'tag-moved',
     'moved'
     'move-sort',
   'change-parent',...}, function(action, object, rank) {
     this points to old model-object,
     this.obj points to view-object
     this.parent, this.rank, this.next, this.previous,
     this.children[],
     this.references[], this.tags[],
     this.referencedBy[], taggedBy[]
     this.tagUI = ViewObject
     (can schedule until after finalized,
       or can return to disallow action)
     tags may define UI for how child-tags appear
      (what about children by reference?)
 });

For synchronizing old remote changes into timeline,
  later need to identify commuting edit-rules,
  (to minimize need to undo/redo user's own changes).

 Do we need to deal with data-binding for the outline?
 (Only for components within each box,
   move/sort handled by one bound controller per outline)

 Write validators for Object-ID's and timestamps, and enumearted
  Write undo/redo functions for history
  TODO: how to handle a parent, reference-target, or tag-target being deleted?
    - Recursively trigger deletion, but normally disallowed in UI
    inverse references/tags storage?

  How are triggers bound to objects?
    - managed through tags
  Source and target-triggers should be enumerated in each instantiated object.
  (Though storage might use query-rules?)

  Mouse loses drag-item when moving last child out of a parent
  (Are the old ones contracted or expanded when removed?)

  Create Model scaffold for outline:
   operations to model/DOM



getTriggers()
getRequiredResources()
getChangedResources()

Queue-structure:
  Action
  Priority-type
  Dependencies
  Resources-accessed [ID:field:ID]
  Resources-changed [ID:field:ID]

Action-types:
  User-Feedback
  User-Model-change
  User-View-change
  User-View-transition
  User-Triggered-Model-change
  User-Triggered-View-change
  User-Triggered-change
  Local-syncing-
  ...

Add global-variables:
 * known-data
 * current-view/data
Add hook for view-change

LATER:
 Modify model/listview to support unknown ranges
 Data-syncs support unknown ranges
 Function for determining load/sync-content
   - given known-data & visible-content


  Queueing:
    Urgent; freeze all others:
      Interactive-feedback
      Model-action-change
      View-model-change
      Notice-logging
    Urgent but skippable:
      Animation-frame
    Background (but triggered model-changes need
          to be finished to test for cosntraints?):
    Triggered-model-change (high but background - if no violation)
      (maybe tag children, check for tag constraint?)
    Triggered-view-change (high but background - if no violation)
    Mark lines queued by triggers?

      Remote-model-change (background)
      Remote-view-change (background?)
      Local Syncing-log (background?)
      Local-syncing-triggered/implied (background?)
      Remote Syncing-log (background?)
      Remote-syncing-triggered/implied (background?)


  It appears to be retaining information from prior location.
    Inspect parentItem.after() command and/or force visibility and/or clone object?

  Change margins on empty ul-elements

  Make text editable, with special meaning to return, backspace, tab, space.
  Highlight available drop-locations
  Make leaf-handles into drop-targets for inside
  Make branch-handles into open/close-targets for hovering

  TEST on mobile!

  Double click focuses-to-top
  Add title-bar with breadcrumbs
  Drag to right
  Saving

  Hide some of the borders?

  ? Should we continue to require contentBinding for lists?
  Coming up:
    Search
    Horizontal swipe
    Inbox, Favorites
    References

    Make lists/selections selectable
    Performance
    Actions, Undo

Issues/todo:

 OK Connect model-ID's with list-views
 OK Extend Backbone.(relational?)Model to add/remove views to each model-item
 OK Test whether __meta works in prototype as expected, before modifying code.
 OK Get files separated out of main.js
 OK Find differences from previous git-commit.
 OK Determine source of model-ID's
 OK Need import-json for model
 OK Choose ID's randomly: cid, id
  DONE: ul's are not hidden after having the last li-item moved out.
  DONE: Change cursor outside of handle (remove button-class?)
  DONE: Add handle on left to drag
  DONE: - add an element inside the list-item-view
  DONE: move handle into tolerance-element div
  DONE: Add expand/collapse buttons
 DONE: Diagnose weird drag-targeting behavior (may also be tied to jquery-mobile theme)
 DONE:   It seems possible to drag li directly inside of li without a ul above it.
DONE  Restyle list after moving
DONE    Find right spot(s) to call ListView.themeUpdate()
DONE    Also call it for the source-location
DONE: Override jquery-mobile listview widget?
DONE:  Hide open-button on right
DONE: Expand sublist CSS to fill right

  DONE Adjust code to permit multi-layered toleranceElement
DONE Get ListView and ListItemView working nested.
DONE Need to define controller for ListView inside ListItemView at correct time
  DONE Only call renderUpdate for sublists when rendering list-item templates.
  DONE Search deeper than one level for sublists - like clone.
  DONE How are event-handlers getting propogated to nested lists - (they're
not)
  DONE Is event-handler propogating to children; why is pageshow getting propogated inward?
  DONE A single controller must identify what is selected among list-outlines.
   Examine pattern of controller-calls when event is fired.
    - set breakpoint inside event-call function (generally useful for debugging)
    ui.js 

Later:
  Need content-binding & event-delegation to work for nested view/controller/model
     elements with the same setup-parameters,
     going to the corresponding model sub-object based on the view nesting.
 -- start with one single content-binding for list/outline
    then add support for binding sub-models inside the list/outline model?
    This is ok when content-changes start from DOM (we know what part to update)
    Harder when change comes from external-database via model content-binding 
      -- probably not needed for one-user text & sort

list.js renderListItemView and cloneObject may need to be changed.
Non-lists would be rendered right here: that.addItem(obj.render());
Call renderUpdate() afterward to render list items?
  But renderUpdate doesn't propogate to lists inside the list-item.
  Make sure renderUpdate propogates - this may affect multiple widgets.

Later: handle updating bound-list content

* Get nestedSortable working on top of ListItems
* Trigger ListView update to/from nestedSortable moves, in up to two lists.

Outline Drag with handle
Notice-message-slider at top
Text edit
Expand/Collapse
Focus button
Multi-page display/swipe
Search-slider
Vertical scrolling
Adjacent & Inbox drag-targets
Search-drag/page
Reference node display
Reference page display
Reference page focus
Toggle drag-to-move vs. reference
Cleanup outline-targets

Home/inbox/preferences?
Undo/Redo
Localstorage

Backend:
---------
Action-log
Search
Autocomplete
Contextual search
Share/Sync
Import/export
  Gmail, Google-docs, Chrome-extension, Evernote
Allocate disk space

Flag for move-original-node on drag/drop?
Preview on click; edit-name/tags on double-click

How does tag-selection UI work?
  Triggers & Inheritance-rules?

Tags can permit/open-up others, or bring to top list?
Different than references, because they are common/numerous?
Text or Nodes?

Are tags text or nodes in a list?
  (probably nodes)
Do some tags permit open-up others?
Tag-management is progammatic?

Later:    
-------------
Long partial lists
Smart-background-loading (start with empty hooks)
Smart-queueing
OS attachment drag/drop
Image cropping/tuning
Indexing & OCR (Html, MS Word, PDF, Google-docs, Image-OCR)

Status, Schedule, Delegation (dependency as subtask?)
Statuses could just be reference-lists with a special UI? 
 (unfiled/someday/later/soon/now/issue/wait-for/wait-until/completed/scheduled-event)

* Node title/shortname automatic before colon (used for paths and abbreviations)

Is ownership a tag?

UI for 
  * making a new tag 
  * making an existing node into a tag 
  * adding/removing tags to nodes 
  * adding/removing filters 
  * editing tag-triggers & constraints
   - trigger from tag-change
   - trigger from delegation
   - trigger from 
  * Adding css-styles based on tags (color; completed)

Distinct from predicated references (0 vs. 1 argument)


- Tags should be nodes, but might have syntax-constraint on content.
  (might also impose uniqueness constraint on tag-text)
  
- Save Search-results vs. Save Search-filter
- Put node-references into 'tags' lists
- Triggers built into tags or items
** Special ui for selecting tags
** UI for defining tag-triggers
- Select sane defaults; let advanced users override
  resolved; today/inbox; switch-on-date; switch-on-reply; switch-on-completion
  today, inbox;  later, completed
* Distinguish Revisit-someday vs. Archived-for-search-only

comment-flow:
issue-flow:
task-flow:
delegation-flow:
due-date-flow:
appointment-flow:
subtask-flow:

- Reference-parents can be shown as a quick-tag; UI for changing quick-tags
- Change-tags-on-date  (common notification-profiles)
- Change-tags-on-dependency (tag-change)
- Change tags on reply from user (edit or reference-change)
- Should be easy to add/remove tags, and to change them and save and/or filters for them, and to support date/trigger logic 

 - optional verb for references for fancier predicates (permits database/spreadsheets)

 - Filter for tags? (#today #soon #later #issue #someday) and (@mark @john)
   type? comment/issue/reference
   bug,issue,feature,story

   (Same-list is 'or', different lists are 'and')
 - How to save searches; setup homepage?
 - Browse by calendar (outline ok)

 - ? Tag-filters for node-types? Not everything's a task?
 - multiple-parent search is fine

 used-for-x and contains-part-y (advanced search; multiple parents)


Special outline of tags: #status @person


Profile & friends


Comment-view: very different UI
  shows children and reference-chains as conversation-threads?
Optional-verb for references?
Browse reverse-references as parents?
Notices?
Friends?

* Phase 1: Discussion
* Phase 2: Collaborative IP
- Feature requesting and valuation demand
- IP for development/design work on features
- Features includes code-quality/documentation
- Advertising-driven pricing for consumers
- Voluntary charity trading


Spreadsheet interface (from tagged properties)
2D-UI design (from outline structure?)

How are constraints supported by the UI
  Form for optional/required fields
  Auto-add/remove tags
Checkbox/Selections - for mutually exclusive tags.
Tag-lists can be annotated as unique, all, required
Tasks have a status, completed or not.
Spreadsheet-like functionaltiy?
// Visually pleasing discussion
// Visual elastic-content-templates: with permissions, video/calendar, search, forms, shopping-cart
// Rich-text-editing?
// Then permit 2D/3D UI

